<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

    <title>Direction With Intent</title>
    <generator uri="https://github.com/jekyll/jekyll">Jekyll v3.8.6</generator>
		<icon>https://directionwithintent.com/apple-touch-icon-precomposed.png</icon>
    <subtitle>Think Through. Execute.</subtitle>
    <link href="https://directionwithintent.com/atom.xml" rel="self"/>
    <link href="https://directionwithintent.com/" rel="alternate" type="text/html"/>
    <updated>2020-09-01T21:30:31+01:00</updated>
    <id>https://directionwithintent.com/</id>
    <author>
			<name>Nuno Valente</name>
			<uri>https://directionwithintent.com/</uri>
			<email>nuno.valente@gmail.com</email>
		</author>

    
    <entry>
        <title>Procrustean Beds of Product Management</title>
        <link href="https://directionwithintent.com/product/avoiding-procrustes-bed/"/>
        <updated>2017-04-14T00:00:00+01:00</updated>
        <id>https://directionwithintent.com/product/avoiding-procrustes-bed</id>
        <author>
					<name>Nuno Valente</name>
					<uri>https://directionwithintent.com/</uri>
					<email>nuno.valente@gmail.com</email>
				</author>
        <content type="html">
        	&lt;img src=&quot;https://directionwithintent.com/images/peg_1600x800.jpg&quot;&gt;&lt;br/&gt;
        	&lt;p&gt;In the Greek Mythology, Procrustes posed as a gentle caretaker, offered accommodation to any passing traveller. After an invitation for a satisfying meal, he provided a good night’s rest in his exceptional bed. Procrustes described it as having the unique property that its length exactly matched whomsoever lay down upon it. What Procrustes didn’t volunteer was the method by which this “one-size-fits-all” was achieved, namely as soon as the guest lay down Procrustes went to work upon him, stretching him on the rack if he was too short for the bed and chopping off his legs if he was too long. (Adapted from Procrustes — MythWeb (http://www.mythweb.com/teachers/why/basics/procrustes.html))&lt;/p&gt;

&lt;p&gt;In a Product Management position, one can imagine the many procrustean beds that are built for the private residents, i.e., engineering, quality assurance, operations, sales, etc. or for the passing traveller such as prospect trials, consultants, brokers and, existing clients. Let us refer to them as internal if they are to be fitted for in-house stakeholders, or external if they “accommodate” visitors that aren’t part of the company inner circle.
In this series, I’m going to focus on the external ones and mostly derived from my experience in B2B environments. The ones that may hinder revenue goals directly and create friction in the overall evolution of the product.&lt;/p&gt;

&lt;p&gt;The prospect client’s trial is a moment of utmost importance and, especially when a product or service has a broad and/or complex feature base. It doesn’t stand for itself. It needs an attentive caretaker that invites the freshly arrived visitor to have the best possible experience and, that can steer him on how to take advantage of the available amenities. Eager as we are, to make an excellent first impression and, to close the deal in the shortest amount of time ( because trials always have a cost ) we invite the user to feel at ease and at the same time we push him to experiment our star features. With the least amount of effort, we show him how to achieve our product promised outcomes. While the caretaker and the user roam around, showcasing the product end to end and iterating over the feature spectrum, we fall into the mistake of force fitting the client to the feature, whether the use case applies or not.&lt;/p&gt;

&lt;p&gt;As it should be expected of a product team, we want and need to be creative. We seek inspiration in every problem that we face but sometimes, repeating empty metaphors such as “thinking outside the box”. And regrettably, we try to find solutions on the spot, for the prospect client workflows, habits and, tools, that are allegedly defective, unorganised, inexistent, &lt;insert another=&quot;&quot; problem=&quot;&quot; here=&quot;&quot;&gt;. On the other hand, a small void or even a domain that we’ve managed to exclude from our road-map can bring havoc when a client merely hints the fact of nonexistent work in that regard. Instead, we should take our notes and seclude our selfs, for a moment, where we can summon our creativity and muster our planning abilities towards a well-designed solution. On the spot, thinking and instant client fitting is the moments where we start amputating the prospect expectations and with the best of intentions in mind but ignoring the prospect client true needs and creating product fragilities. Doing this we fall into an uberous mind trap. Let’s delve into one type of this situations. The dreadful and pernicious Workaround.&lt;/insert&gt;&lt;/p&gt;

&lt;p&gt;The Workaround&lt;/p&gt;

&lt;p&gt;It is a well-known term in the Engineering class and many times used ad nauseam. Whether it is the best option at a time of need, laziness, schedule compression, damage control or just a temporary patch. It is a well-known term in the engineering class and many times used ad nauseam. Whether it is the best option at a time of need, laziness, schedule compression, damage control or just a temporary patch. A seasoned Software Engineer evidently used it on several occasions and sometimes wakes a night, shivering with the memories of some that still work on a machine somewhere.&lt;/p&gt;

&lt;p&gt;In Product Development, the Workaround has a very similar set of characteristics. It is some process or small addition that will leverage an alternative pathway of one or more features to attain, what we believe to be a quick win. Sometimes with the objective of solving an unexpected user need or capricious desire. Sometimes it’s a cover up of an edge case that the product team did not address correctly or just ignored because they’ve fallen into a pseudo-statistical fallacy.&lt;/p&gt;

&lt;p&gt;The Workaround trigger usually occurs in a commercial or technical tour of the product. May it be a sincere question that has a genuine need behind or a more technical person that wants to show off his wits. Occasionally can be a snarky remark that may compare his current work environment or another tool that he tried recently with our own, and something is definitely missing in his eyes.
The fear and anxiety of not being able to entertain the user, makes us create a parallel thread with a request that the product team scramble the issue searching a way to meet our client expectations. It should not be a problem if at that moment a backlog entry is dutifully filled with a good picture of the issue, that popped up from the conversation, and a reasonable amount of time is taken to consider the proposition. It is a problem when we bypass our product development processes, and the proposed solution involves small feature adjustments that didn’t pass a thorough impact analysis. It is a problem when even avoiding the most minor alteration, it is the result of a collage of one or more features, or maybe, just making use of a feature quirk and painting it as a fully fledged product of human ingenuity. Unfortunately, the Workaround, most of the times results in a non-fluid and/or semi-automatic action plan, requiring the user to withstand some pain or to exert himself to do the same thing that he did or have seen in action before. At the exit of the Workaround, we claim victory if a significant amount of work that the user already does in a streamlined fashion or seen it being executed in the same way can be achieved in our product. We think that we’ve kept the user going, but we don’t see that the user is limping on its way. It may take just a small extra effort to vindicate the capabilities of our product but at the cost of an amputation.&lt;/p&gt;

&lt;p&gt;For the attentive and sharp reader, another Procrustean Bed can be found A Posteriori. At the exit of the Workaround and this one with the bed and victim roles switched. This one can kill our product vision and eventually our product. Remember that for the Workaround to be put in place, some small change in our product had to be made. Even when we’ve just managed to pipeline a feature output to another as input, and with some caretaker good will. We’ve adjusted our product to fit that particular prospect or even client need at that precise moment in time without measuring the consequences of those actions. Expectations were created, and new plumbing was added disregarding our architecture, use cases and requirements. To do this, we’ve amputated, rearranged, bypassed and plug it again changing our product morphology. Again, with the best of intentions, to show how exceptional is our team and product. If we exit the Workaround multiple times, it is granted that our product will die in the bed that was made with our client’s hands.&lt;/p&gt;

&lt;p&gt;The Workaround is avoidable, and it should be considered an anti-pattern in product development and management. It is damaging for our client prospects, and it is deadly for our product. Take the necessary precautions when you meet with the prospect of a Workaround and make time for fixing it before the product vitality seeps out from all of those newly created ins and outs.&lt;/p&gt;

&lt;p&gt;Do you know more Procrustean Beds in Product Development and Management? Leave your comments and let’s have a chat.&lt;/p&gt;

&lt;p&gt;Procrustean services and products on the wild&lt;/p&gt;

&lt;p&gt;After reading this piece one might wonder that no procrustean bed should be a success since it destroys vital parts of the client work, team, company, etc. The reality is quite different and a quick inspection of our surroundings with this thought in mind will show us that sometimes people jump into those beds and accept the punishment in exchange of some promise of greatness.&lt;/p&gt;

&lt;p&gt;Twitter is an excellent example of a procrustean bed. In this type of services, critical mass has a bandwagon effect that, most of the users aren’t even forced to lay their content on it, while amputating themselves in colorful headlines that the arbitrary 140 character limit can contain. All of them with the fear of missing out the short exposure and afraid that they will not be a part of a vaporous and fleeting zeitgeist.&lt;/p&gt;

        </content>
    </entry>
    
    <entry>
        <title>An Island and a Cloud.</title>
        <link href="https://directionwithintent.com/opinion/ground_and_cloud/"/>
        <updated>2014-10-26T00:00:00+01:00</updated>
        <id>https://directionwithintent.com/opinion/ground_and_cloud</id>
        <author>
					<name>Nuno Valente</name>
					<uri>https://directionwithintent.com/</uri>
					<email>nuno.valente@gmail.com</email>
				</author>
        <content type="html">
        	&lt;img src=&quot;https://directionwithintent.com/images/island_1600x800.jpg&quot;&gt;&lt;br/&gt;
        	&lt;h2 id=&quot;apple-prison-more-like-apple-island&quot;&gt;Apple Prison? More like Apple Island.&lt;/h2&gt;

&lt;p&gt;Four years ago, give or take a few months, I’ve changed my work and home machines to Apple systems, abandoning the mixed Windows/Linux environments that accompanied me since high school.&lt;/p&gt;

&lt;p&gt;It was a quick change fueled by a couple of teammates and the fact that I’ve bought an iPhone a few months earlier. All my Windows machines were dead or in need of repair, and I was just sick of the finicky Vista that was installed by default in my current machine at that time. Those were dark times for Microsoft OSs.&lt;/p&gt;

&lt;p&gt;The change was made and some months later I was completely sold to Apple Software and Hardware.&lt;/p&gt;

&lt;p&gt;One of my favorite things about Apple is the seamless integration of all its products. Connecting my iPhone to my MacBook Pro and easily sync my data between devices, even though iTunes isn’t the best interface to accomplish my syncing needs. Also, the iCloud option for backing up my “mobile data” is also noteworthy although one needs to keep the data hygiene for the free tier.&lt;/p&gt;

&lt;p&gt;Unfortunately, I’m a victim of the mid-2010 MacBook Pro, but even so, the combination of Apple software and hardware bring a level of reliability, far above average. Recently, I also boasted of my 127-day uptime to my teammates that usually restart their machines now and then. I know that any *nix user out there will claim even longer uptimes, but with a maintenance cost that I don’t want to pay every day.&lt;/p&gt;

&lt;p&gt;Currently, I own a late-2013 MacBook Pro with retina display, 512 GB SSD drive plus a DDR3 memory total of 16 GB. Obviously, this isn’t a machine that the everyday user will take advantage of, but for an I.T. professional like me, this is undoubtedly one of the best machines that my money could buy. Add the current Apple option of upgrading OSX free from charge and you have a system that can last for four or more years without the need of a drastic and expensive upgrade. As my fellow Software Engineers out there, I love to tinker with my hardware and software occasionally, but that’s it. My machine is to work on, and not to bring me extra work just to keep it updated and running smoothly. I have joy and fun hacking away…But I would instead not do it every day.&lt;/p&gt;

&lt;p&gt;If I need any piece of software for my tool belt, I just hit a few search queries, and the App Store provides. Even though I don’t actually know the people and processes that Apple uses to accept a new App in their store I always have a sense of security of the available products. Having at least a primary barrier against mediocre software prevents the application spam that other vendors suffer from their so-called openness.&lt;/p&gt;

&lt;p&gt;And because of the above reasons and so many more, many people would say that Apple software is evil for creating a prison that they cannot leave or decorate on their terms. In my opinion, this is not really a prison, but an exotic island where I can live happily without the diseases spreading on the continent. As a bonus, I can live knowing that the environment is cared, groomed and curated.&lt;/p&gt;

&lt;h2 id=&quot;above-and-beyond&quot;&gt;Above and beyond&lt;/h2&gt;

&lt;p&gt;“No man is an island” is a well-known quote and truth. We need to communicate and interact with others to grow, evolve, and produce something that everybody can be proud of. In order for this to happen, we need to leave our beautiful Island and interact with the harsh environment out there. In this area, I need to champion Google.&lt;/p&gt;

&lt;p&gt;The Drive/Docs combination is fantastic, for me, my team and, several stakeholders of the projects where I’m currently committed to. The aforementioned pair brings a powerful tool to keep our product backlog stories, specs and assorted meeting minutes. Documents are edited concurrently between me (under the hat of team lead), a designer team account and a product owner. All these while ideas float around the meeting table.&lt;/p&gt;

&lt;p&gt;Drive accommodates much storage giving us the sense that it is an infinite local share. I just hope that Google invests in improving Docs and Drive interfaces up to the level of most of Apple software. Now and then I need to restructure my Docs and Drive area, but the current interface surely needs refinements and a good UI/UX boost.&lt;/p&gt;

&lt;p&gt;Gmail is widespread, and Inbox is a step forward in solving the current e-mail hell. My personal mail account is Gmail, and the company where I’m currently working, has Gmail from their beginnings. I can’t remember a day that Google cloud services failed and caused embarrassment on my company services and processes. Add Google Chat on the mail interface and instantly kill many unnecessary e-mail exchanges.&lt;/p&gt;

&lt;p&gt;So “Google” reads all my emails? No problem my friend. If I need to pay those services only by receiving targeted publicity (in a very discrete manner), then please do. Avoid sending me those ads for car rims that I do not care and sell me the smallest pocket wallet on the market. In the middle of that insurmountable pile of data, I’m a male 25–35 years old that is a geek and sports lover. My personal data is protected by numbers that grow every day just as though a flock survives predators with sheer confusion of Agile movement and bird count.&lt;/p&gt;

&lt;h2 id=&quot;my-environment&quot;&gt;My environment&lt;/h2&gt;

&lt;p&gt;Monopoly is a game that I loved to play when I was a kid and even nowadays is a well-spent night with friends but it is something that is very dangerous in the real world. I hope that none of these companies can achieve a market position that can dry completely all of their competitors, but right now I choose to spend some years in this lovely Apple island with a Google cloudy sky.&lt;/p&gt;

        </content>
    </entry>
    
    <entry>
        <title>JRuby / JVM encoding flags</title>
        <link href="https://directionwithintent.com/programming/jruby-jvm-encoding-flags/"/>
        <updated>2013-02-01T00:00:00+00:00</updated>
        <id>https://directionwithintent.com/programming/jruby-jvm-encoding-flags</id>
        <author>
					<name>Nuno Valente</name>
					<uri>https://directionwithintent.com/</uri>
					<email>nuno.valente@gmail.com</email>
				</author>
        <content type="html">
        	&lt;img src=&quot;https://directionwithintent.com/images/jruby_1600x800.jpg&quot;&gt;&lt;br/&gt;
        	&lt;p&gt;Once upon a time, I was developing a couple of extensions for &lt;a href=&quot;http://logstash.net/&quot;&gt;Logstash&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One of my input extensions connected to a SQLServer via JDBC driver and it all worked fine in my OSX machine. But then, an evil Red Hat Enterprise server appeared, took over the control of my processes and started to mess with all of my good JVM configurations (some of them, I didn’t even know that they existed).&lt;/p&gt;

&lt;p&gt;After some suffering, anger and hunger that all debugging processes bring, I’ve found an ancient JVM flag that my evil Red Hat server changed, just to see me cry, after several bad relationships with an assorted number of encodings.&lt;/p&gt;

&lt;p&gt;sun.io.unicode.encoding=UnicodeBig (good OSX)&lt;/p&gt;

&lt;p&gt;sun.io.unicode.encoding=UnicodeLittle ( evil Red Hat)&lt;/p&gt;

&lt;p&gt;Loading up my JVM with -J-Dsun.io.unicode.encoding=UnicodeLittle saved the day.&lt;/p&gt;

&lt;p&gt;By the way, if you ever want to check your encoding flags just add this to your JRuby script:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require 'java'

java_import java.util.Locale
java_import java.util.Properties
java_import java.util.Enumeration
java_import java.lang.System

{assorted code}

p = System.getProperties();
keys = p.keys();
keys.each do |key|
  value = p.get(key);
  puts &quot;#{key} : #{value}&quot;
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With this script, you can print all of your JVM instance flags. Have fun!&lt;/p&gt;

        </content>
    </entry>
    
</feed>